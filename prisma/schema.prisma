// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model users {
  id String @id @db.VarChar(50)
  username String @db.VarChar(50) @unique
  password String @db.Text
  fullname String @db.Text
  threads threads[]
  comments comments[]
  replies replies[]
}

model authentications {
  token String @db.Text @id
}

model threads {
  id String @id @db.VarChar(50)
  title String @db.Text
  body String @db.Text
  owner String @db.VarChar(50)
  author users @relation(fields: [owner], references: [id], onDelete: Cascade)
  date DateTime @default(now())
  comments comments[]
  replies replies[]
}

model comments {
  id String @id @db.VarChar(50)
  content String @db.Text
  thread_id String @db.VarChar(50)
  thread threads @relation(fields: [thread_id], references: [id], onDelete: Cascade)
  owner String @db.VarChar(50)
  author users @relation(fields: [owner], references: [id], onDelete: Cascade)
  date DateTime @default(now())
  is_delete Boolean @default(false)
  replies replies[]
}

model replies {
  id String @id @db.VarChar(50)
  content String @db.Text
  thread_id String @db.VarChar(50)
  thread threads @relation(fields: [thread_id], references: [id], onDelete: Cascade)
  comment_id String @db.VarChar(50)
  comment comments @relation(fields: [comment_id], references: [id], onDelete: Cascade)
  owner String @db.VarChar(50)
  author users @relation(fields: [owner], references: [id], onDelete: Cascade)
  date DateTime @default(now())
  is_delete Boolean @default(false)
}
